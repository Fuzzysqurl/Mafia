        /* TESTINGSCRIPTSTART */
        if (command == "pushn") {
            var pushedPlayers = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
            if (this.state != "entry") {
                msg(src, "Pushing makes no sense outside entry...");
                return;
            }
            if (commandData <= 0) {
                msg(src, "Set a valid number.");
                return;
            }
            
            if (commandData > pushedPlayers.length) {
                msg(src, "Not enough names.");
                return;
            }
            var addedPlayers = pushedPlayers.concat();
            for (var n = addedPlayers.length; n >= 0; --n) {
                if (this.signups.indexOf(addedPlayers[n]) >= 0) {
                    addedPlayers.splice(n, 1);
                }
            }
            var addedPlayers = addedPlayers.slice(0, commandData);
            for (var p in addedPlayers) {
                this.signups.push(addedPlayers[p]);
                gamemsgAll(addedPlayers[p] + " joined the game! (pushed by " + nonFlashing(sys.name(src)) + ")");
            }
            gamemsgAll(addedPlayers.length + " players added!", "Push");
            return;
        }
        if (command == "showall") {
            if (["blank", "entry", "voting"].indexOf(mafia.state) == -1) {
                var list = [];
                for (var p in mafia.players) {
                    list.push(p + " ("+ mafia.players[p].role.translation + ")");
                }
                gamemsg(srcname, list.join(", "));
                gamemsgAll(srcname + " is using /showall to find everyone's role. This is for Administration purposes-only.", "Warning");
                if (sachannel != -1) {
                    gamemsgAll(srcname + " is using /showall to find everyone's role. This is for Administration purposes-only.", "Warning", sachannel);
                }
            } else {
                gamemsg(srcname, "No game running!");
            }
            return;
        }
        if (command == "settime") {
            if (mafia.state != "blank") {
                if (commandData <= 0) {
                    gamemsg(srcname, "Please set a value above 0!");
                    return;
                }
                mafia.ticks = commandData;
                sendChanHtmlAll("<font color='#FF0000'><timestamp/> This phase will last for another <b>" + commandData + " second" + (commandData == "1" ? "" : "s") + "</b> because <b>" + sys.name(src) + "</b> said so! </font>", mafiachan);
            } else {
                gamemsg(srcname, "No game running!");
            }
            return;
        }
        if (command == "addplayer") {
            var addInfo = commandData.split(":");
            try {
                var player = addInfo[0];
                var role= addInfo[1];
                if (["entry", "voting", "blank"].indexOf(mafia.state) != -1) {
                    gamemsg(srcname, "Can't add a player now!", "Warning");
                    return;
                }
                if (mafia.isInGame(player)) {
                    gamemsg(srcname, "This player is already in the game!", "Warning");
                    return;
                }
                if (role in mafia.theme.roles) {
                    mafia.players[player] = {'name': player, 'role': mafia.theme.roles[role], 'targets': {}, 'recharges': {}, 'dayrecharges':{}, 'charges' : {}, 'daycharges' : {}, 'evadeCharges' : {}, 'restrictions': [] };
                    mafia.setPlayerRole(mafia.players[player], role);
                    gamemsg(srcname, "Player " + player + " pushed to the game as " + mafia.theme.trrole(role) + " (" + role + ")");
                } else {
                    gamemsg(srcname, "No such role!");
                    return;
                }
            } catch (err) {
                gamemsg(srcname, "Error when adding player: " + err);
            }
            return;
        }
        if (command == "debug") {
            var val, param = commandData.split(":"), data = param[0].split(".");
           
            if (data.length > 0) {
                val = mafia[data[0]];
                for (var j = 1; j < data.length; j++) {
                    val = val[data[j]];
                }
                if (Array.isArray(val)) {
                    if (param.length > 1) {
                        val = val.map(function(x) { return typeof x == "object" ? x[param[1]] : x; }).join(", ");
                    } else {
                        val = val.join(", ");
                    }
                } else if (typeof val == "object") {
                    val = Object.keys(val).join(", ");
                }
                msg(src, "Value of mafia." + commandData +": " + val);
            } else {
                msg(src, "Invalid property");
            }
            return;
        }
        /* TESTINGSCRIPTEND */
